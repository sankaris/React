{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/React/taskadder/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n\n/*import CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';*/\nimport './App.css';\nimport DataAdder from './components/DataAdder/DataAdder';\n//import NameList from './components/DataAdder/NameList';\n\n/*const App = () => {\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },\n    { text: 'Finish the course!', id: 'g2' }\n  ]);\n\n  const addGoalHandler = enteredText => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = goalId => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  if (courseGoals.length > 0) {\n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n      </section>\n    </div>\n  );\n};*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const addNameHandler = inputValue => {\n    setEnteredName(prevName => {\n      return [...prevName, {\n        enteredName: inputValue,\n        id: Math.random().toString()\n      }];\n    });\n  };\n\n  /*let content = (\n    <p style={{ textAlign: 'center' }}>No name found. Maybe add one?</p>\n  );\n   if (name.length > 0) {\n    content = (\n      <NameList items={name} />\n    );\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DataAdder, {\n      onAddName: addNameHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"vzSaWYgLP3NpJ7jsb5MXzkvyCJQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","DataAdder","jsxDEV","_jsxDEV","App","_s","enteredName","setEnteredName","useState","addNameHandler","inputValue","prevName","id","Math","random","toString","children","onAddName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/Desktop/React/taskadder/src/App.js"],"sourcesContent":["import React from 'react';\n\n/*import CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';*/\nimport './App.css';\nimport DataAdder from './components/DataAdder/DataAdder';\n//import NameList from './components/DataAdder/NameList';\n\n/*const App = () => {\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },\n    { text: 'Finish the course!', id: 'g2' }\n  ]);\n\n  const addGoalHandler = enteredText => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = goalId => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  if (courseGoals.length > 0) {\n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n      </section>\n    </div>\n  );\n};*/\n\nconst App = () => {\n\n  const [enteredName,setEnteredName] = useState('');\n\n  const addNameHandler = (inputValue) => {\n    setEnteredName(prevName => {\n      return [\n        ...prevName,\n        {enteredName:inputValue,id:Math.random().toString()}\n      ]\n    })\n  }\n\n  /*let content = (\n    <p style={{ textAlign: 'center' }}>No name found. Maybe add one?</p>\n  );\n\n  if (name.length > 0) {\n    content = (\n      <NameList items={name} />\n    );\n  }*/\n\n   return (\n      <div>\n        <DataAdder  onAddName={addNameHandler} />\n      </div>\n   )\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,kCAAkC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA,SAAAC,MAAA,IAAAC,OAAA;AA2CA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMC,cAAc,GAAIC,UAAU,IAAK;IACrCH,cAAc,CAACI,QAAQ,IAAI;MACzB,OAAO,CACL,GAAGA,QAAQ,EACX;QAACL,WAAW,EAACI,UAAU;QAACE,EAAE,EAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;MAAC,CAAC,CACrD;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAGG,oBACGZ,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACF,SAAS;MAAEgB,SAAS,EAAER;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEZ,CAAC;AAAAhB,EAAA,CA5BKD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}