{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/React/taskadder/src/components/TasksData/TaskData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskInput from \"./TaskInput/TaskInput\";\nimport TaskList from \"./TaskList/TaskList\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskData = props => {\n  _s();\n  const [task, setTask] = useState([{\n    text: \"Stay Positive\",\n    id: \"T1\"\n  }, {\n    text: \"Stay Blesses\",\n    id: \"T2\"\n  }]);\n  const addTaskHandler = inputValue => {\n    setTask(prevTask => {\n      const currentTask = [...prevTask];\n      currentTask.unshift({\n        text: inputValue,\n        id: Math.random().toString()\n      });\n      return currentTask;\n    });\n  };\n  const deleteItemHandler = goalId => {\n    setTask(prevTask => {\n      const currentTask = prevTask.filter(goal => goal.id !== goalId);\n      return currentTask;\n    });\n  };\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"No goals found. Maybe add one?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n  if (task.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(TaskList, {\n      items: task,\n      onDeleteTask: deleteItemHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goal-from\",\n      children: /*#__PURE__*/_jsxDEV(TaskInput, {\n        onAddTask: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goals\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskData, \"wIunTy3Mhz1nm5648yuG45m5dW0=\");\n_c = TaskData;\nexport default TaskData;\nvar _c;\n$RefreshReg$(_c, \"TaskData\");","map":{"version":3,"names":["React","useState","TaskInput","TaskList","jsxDEV","_jsxDEV","TaskData","props","_s","task","setTask","text","id","addTaskHandler","inputValue","prevTask","currentTask","unshift","Math","random","toString","deleteItemHandler","goalId","filter","goal","content","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","length","items","onDeleteTask","onAddTask","_c","$RefreshReg$"],"sources":["/home/user/Desktop/React/taskadder/src/components/TasksData/TaskData.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport TaskInput from \"./TaskInput/TaskInput\";\nimport TaskList from \"./TaskList/TaskList\";\nimport './App.css';\n\nconst TaskData = (props) => {\n    const [task,setTask] = useState([\n        {text : \"Stay Positive\",id:\"T1\"},\n        {text: \"Stay Blesses\",id:\"T2\"}\n    ]);\n\n    const addTaskHandler = inputValue => {\n        setTask(prevTask => {\n            const currentTask = [...prevTask];\n            currentTask.unshift({text: inputValue,id:Math.random().toString()})\n            return currentTask;\n        })\n    }\n\n    const deleteItemHandler = goalId => {\n        setTask(prevTask => {\n          const currentTask = prevTask.filter(goal => goal.id !== goalId);\n          return currentTask;\n        });\n    };\n\n    let content = (\n        <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n      );\n    \n      if (task.length > 0) {\n        content = (\n          <TaskList items={task} onDeleteTask={deleteItemHandler} />\n        );\n      }\n\n    return (\n        <div>\n            <section id=\"goal-from\">\n                <TaskInput onAddTask={addTaskHandler} />\n            </section>\n            <section id=\"goals\">\n                {content}\n            </section>\n        </div>\n    )\n\n}\n\nexport default TaskData;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAC5B;IAACU,IAAI,EAAG,eAAe;IAACC,EAAE,EAAC;EAAI,CAAC,EAChC;IAACD,IAAI,EAAE,cAAc;IAACC,EAAE,EAAC;EAAI,CAAC,CACjC,CAAC;EAEF,MAAMC,cAAc,GAAGC,UAAU,IAAI;IACjCJ,OAAO,CAACK,QAAQ,IAAI;MAChB,MAAMC,WAAW,GAAG,CAAC,GAAGD,QAAQ,CAAC;MACjCC,WAAW,CAACC,OAAO,CAAC;QAACN,IAAI,EAAEG,UAAU;QAACF,EAAE,EAACM,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;MAAC,CAAC,CAAC;MACnE,OAAOJ,WAAW;IACtB,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,iBAAiB,GAAGC,MAAM,IAAI;IAChCZ,OAAO,CAACK,QAAQ,IAAI;MAClB,MAAMC,WAAW,GAAGD,QAAQ,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACZ,EAAE,KAAKU,MAAM,CAAC;MAC/D,OAAON,WAAW;IACpB,CAAC,CAAC;EACN,CAAC;EAED,IAAIS,OAAO,gBACPpB,OAAA;IAAGqB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,EAAC;EAA8B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CACrE;EAED,IAAIvB,IAAI,CAACwB,MAAM,GAAG,CAAC,EAAE;IACnBR,OAAO,gBACLpB,OAAA,CAACF,QAAQ;MAAC+B,KAAK,EAAEzB,IAAK;MAAC0B,YAAY,EAAEd;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1D;EACH;EAEF,oBACI3B,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAASO,EAAE,EAAC,WAAW;MAAAgB,QAAA,eACnBvB,OAAA,CAACH,SAAS;QAACkC,SAAS,EAAEvB;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACV3B,OAAA;MAASO,EAAE,EAAC,OAAO;MAAAgB,QAAA,EACdH;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAGd,CAAC;AAAAxB,EAAA,CA1CKF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}