{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/React/react-http/src/App.js\";\n//import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\n//import FocusInput from './components/FocusInput';\n//import ClassTimer from './components/ClassTimer';\n/*import ComponentA from './components/ComponentA';\nimport ComponentB from './components/ComponentB';\nimport ComponentC from './components/ComponentC';*/\n//import DataFetching from './components/DataFetching';\n//import DataFetchingTwo from './components/DataFetchingTwo';\n//import CounterThree from './components/CounterThree';\n//import CounterOne from './components/CounterOne';\n//import CounterTwo from './components/CounterTwo';\n//import EffectCounter from './components/EffectCounter';\n//import HookCounterFour from './components/HookCounterFour';\n//import HookCounterThree from './components/HookCounterThree';\n//import HookCounter from './components/HookCounter';\n//import HookCounterTwo from './components/HookCounterTwo';\n//import Postlist from './components/PostList';\n//import PostForm from './components/PostForm';\n\n/*export const CountContext = React.createContext()\n\nconst initialState = 0\n\nconst reducer = (state,action) => {\n    switch(action) { \n        case 'increment':\n            return state + 1\n        case 'decrement':\n            return state - 1\n        case 'reset':\n            return initialState\n        default:\n            return state\n    }\n}*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [count,dispatch] = useReducer(reducer,initialState)\n  return (\n    /*#__PURE__*/\n    // <CountContext.Provider value = {{countState : count , countDispatch : dispatch}}>\n    _jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/Desktop/React/react-http/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\n//import FocusInput from './components/FocusInput';\n//import ClassTimer from './components/ClassTimer';\n/*import ComponentA from './components/ComponentA';\nimport ComponentB from './components/ComponentB';\nimport ComponentC from './components/ComponentC';*/\n//import DataFetching from './components/DataFetching';\n//import DataFetchingTwo from './components/DataFetchingTwo';\n//import CounterThree from './components/CounterThree';\n//import CounterOne from './components/CounterOne';\n//import CounterTwo from './components/CounterTwo';\n//import EffectCounter from './components/EffectCounter';\n//import HookCounterFour from './components/HookCounterFour';\n//import HookCounterThree from './components/HookCounterThree';\n//import HookCounter from './components/HookCounter';\n//import HookCounterTwo from './components/HookCounterTwo';\n//import Postlist from './components/PostList';\n//import PostForm from './components/PostForm';\n\n/*export const CountContext = React.createContext()\n\nconst initialState = 0\n\nconst reducer = (state,action) => {\n    switch(action) { \n        case 'increment':\n            return state + 1\n        case 'decrement':\n            return state - 1\n        case 'reset':\n            return initialState\n        default:\n            return state\n    }\n}*/\n\nfunction App() {\n // const [count,dispatch] = useReducer(reducer,initialState)\n  return (\n   // <CountContext.Provider value = {{countState : count , countDispatch : dispatch}}>\n    <div className=\"App\">\n       {/*<Postlist /> \n       <PostForm /> \n       <HookCounter /> \n       <HookCounterTwo />\n       <HookCounterThree />\n       <HookCounterFour />\n       <EffectCounter />\n       <CounterOne />\n       <CounterTwo />\n       <CounterThree />\n        <div> Count - {count} </div>\n       <ComponentA />\n       <ComponentB />\n       <ComponentC />\n       <DataFetching />\n  <DataFetchingTwo />\n       <FocusInput />\n       <ClassTimer />*/}\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA,SAAAC,MAAA,IAAAC,OAAA;AAiBA,SAASC,GAAGA,CAAA,EAAG;EACd;EACC;IAAA;IACC;IACCD,OAAA;MAAKE,SAAS,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBf;EAAC;AAGV;AAACC,EAAA,GA1BQN,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}